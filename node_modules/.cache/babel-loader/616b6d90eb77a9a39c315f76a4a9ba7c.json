{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamh\\\\Desktop\\\\Bizkod\\\\bizkod\\\\src\\\\components\\\\UpdateWorkspace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport './UpdateWorkspace.css';\nimport WorkspaceCard from './WorkspaceCard';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateWorkspace = () => {\n  _s();\n\n  const [dates, setDates] = useState([]);\n\n  const createNotification = type => {\n    return () => {\n      switch (type) {\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  };\n\n  let arr = [];\n\n  const displayCardHandler = () => {\n    const today = moment().format(\"DD.MM.YYYY\");\n\n    for (let i = 0; i < 7; i++) {\n      const tempDate = moment(today, \"DD-MM-YYYY\").add(i, 'days');\n      const day = tempDate.format('DD');\n      const month = tempDate.format('MM');\n      const year = tempDate.format('YYYY');\n      const dayName = tempDate.format('dddd');\n      const finalDate = day + '.' + month + '.' + year;\n\n      if (dayName === \"Saturday\" || dayName === \"Sunday\") {\n        continue;\n      } else {\n        arr.push(finalDate);\n      }\n    }\n  }; // const [workplace, setWorkplace] = useState('');\n  // const updateWorkplaceHandler = (event) => {\n  //     event.preventDefault();\n  //     setWorkplace(event.target.value);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"updateWorkspace\",\n    children: /*#__PURE__*/_jsxDEV(NotificationContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateWorkspace__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: createNotification('success'),\n          children: \"Test notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), displayCardHandler(), arr.map(item => {\n          console.log(item);\n          return /*#__PURE__*/_jsxDEV(WorkspaceCard, {\n            validDate: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateWorkspace, \"w4uuy4t+zF0dSe85UnhNjfn5kq8=\");\n\n_c = UpdateWorkspace;\nexport default UpdateWorkspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateWorkspace\");","map":{"version":3,"sources":["C:/Users/adamh/Desktop/Bizkod/bizkod/src/components/UpdateWorkspace.js"],"names":["React","useState","moment","NotificationContainer","NotificationManager","WorkspaceCard","Button","UpdateWorkspace","dates","setDates","createNotification","type","success","error","alert","arr","displayCardHandler","today","format","i","tempDate","add","day","month","year","dayName","finalDate","push","map","item","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,qBAAR,EAA+BC,mBAA/B,QAAyD,qBAAzD;AAEA,OAAO,uBAAP;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,kBAAkB,GAAIC,IAAD,IAAU;AACjC,WAAO,MAAM;AACX,cAAQA,IAAR;AACE,aAAK,SAAL;AACEP,UAAAA,mBAAmB,CAACQ,OAApB,CAA4B,iBAA5B,EAA+C,YAA/C;AACA;;AACF,aAAK,OAAL;AACER,UAAAA,mBAAmB,CAACS,KAApB,CAA0B,eAA1B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D,MAAM;AAClEC,YAAAA,KAAK,CAAC,UAAD,CAAL;AACC,WAFH;AAGA;AARJ;AAUD,KAXD;AAYH,GAbD;;AAeA,MAAIC,GAAG,GAAG,EAAV;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC7B,UAAMC,KAAK,GAAGf,MAAM,GAAGgB,MAAT,CAAgB,YAAhB,CAAd;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACvB,YAAMC,QAAQ,GAAGlB,MAAM,CAACe,KAAD,EAAQ,YAAR,CAAN,CAA4BI,GAA5B,CAAgCF,CAAhC,EAAmC,MAAnC,CAAjB;AACA,YAAMG,GAAG,GAAGF,QAAQ,CAACF,MAAT,CAAgB,IAAhB,CAAZ;AACA,YAAMK,KAAK,GAAGH,QAAQ,CAACF,MAAT,CAAgB,IAAhB,CAAd;AACA,YAAMM,IAAI,GAAGJ,QAAQ,CAACF,MAAT,CAAgB,MAAhB,CAAb;AACA,YAAMO,OAAO,GAAGL,QAAQ,CAACF,MAAT,CAAgB,MAAhB,CAAhB;AACA,YAAMQ,SAAS,GAAGJ,GAAG,GAAG,GAAN,GAAYC,KAAZ,GAAoB,GAApB,GAA0BC,IAA5C;;AAEA,UAAGC,OAAO,KAAK,UAAZ,IAA0BA,OAAO,KAAK,QAAzC,EAAmD;AAC/C;AACH,OAFD,MAEO;AACHV,QAAAA,GAAG,CAACY,IAAJ,CAASD,SAAT;AACH;AACJ;AACJ,GAjBD,CArB0B,CAwC1B;AAEA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI,QAAC,qBAAD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACA;AAAI,UAAA,OAAO,EAAEhB,kBAAkB,CAAC,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAECM,kBAAkB,EAFnB,EAGCD,GAAG,CAACa,GAAJ,CAAQC,IAAI,IAAI;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,8BAAO,QAAC,aAAD;AAAe,YAAA,SAAS,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAHA,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA9DD;;GAAMtB,e;;KAAAA,e;AAgEN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nimport './UpdateWorkspace.css';\r\n\r\nimport WorkspaceCard from './WorkspaceCard';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst UpdateWorkspace = () => {\r\n\r\n    const [dates, setDates] = useState([]);\r\n\r\n    const createNotification = (type) => {\r\n        return () => {\r\n          switch (type) {\r\n            case 'success':\r\n              NotificationManager.success('Success message', 'Title here');\r\n              break;\r\n            case 'error':\r\n              NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n                alert('callback');\r\n                });\r\n              break;\r\n            }\r\n        }\r\n    };\r\n\r\n    let arr = [];\r\n\r\n    const displayCardHandler = () => {\r\n        const today = moment().format(\"DD.MM.YYYY\");\r\n\r\n        for(let i = 0; i < 7; i++) {\r\n            const tempDate = moment(today, \"DD-MM-YYYY\").add(i, 'days');\r\n            const day = tempDate.format('DD');\r\n            const month = tempDate.format('MM');\r\n            const year = tempDate.format('YYYY');\r\n            const dayName = tempDate.format('dddd');\r\n            const finalDate = day + '.' + month + '.' + year;\r\n\r\n            if(dayName === \"Saturday\" || dayName === \"Sunday\") {\r\n                continue;\r\n            } else {\r\n                arr.push(finalDate);\r\n            }\r\n        } \r\n    }\r\n\r\n    // const [workplace, setWorkplace] = useState('');\r\n\r\n    // const updateWorkplaceHandler = (event) => {\r\n    //     event.preventDefault();\r\n    //     setWorkplace(event.target.value);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"updateWorkspace\">\r\n            <NotificationContainer>\r\n            <div className=\"updateWorkspace__wrapper\">\r\n            <h1 onClick={createNotification('success')}>Test notification</h1>\r\n            {displayCardHandler()}\r\n            {arr.map(item => {\r\n                console.log(item);\r\n                return <WorkspaceCard validDate={item} />\r\n            })}\r\n\r\n            </div>\r\n            </NotificationContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateWorkspace\r\n"]},"metadata":{},"sourceType":"module"}